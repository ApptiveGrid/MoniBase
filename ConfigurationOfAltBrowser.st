'From Pharo3.0 of 18 March 2013 [Latest update: #30787] on 4 March 2014 at 10:39:17.286025 am'!Object subclass: #ConfigurationOfAltBrowser	instanceVariableNames: 'project'	classVariableNames: 'LastVersionLoad'	poolDictionaries: ''	category: 'ConfigurationOfAltBrowser'!!ConfigurationOfAltBrowser commentStamp: '<historical>' prior: 0!AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration.It integrates: the finder, message browser and the usual system browser.!!ConfigurationOfAltBrowser methodsFor: 'accessing' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfAltBrowser methodsFor: 'accessing' stamp: 'ThierryGoubier 2/6/2014 15:44'!project	^ project		ifNil: [ 			| constructor |				"Bootstrap Metacello if it is not already loaded"			(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.				"Construct Metacello project"			project := MetacelloMCProject new projectAttributes: self customProjectAttributes.			constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.			project loadType: #linear.	"change to #atomic if desired"			project ]! !!ConfigurationOfAltBrowser methodsFor: 'baseline' stamp: 'ThierryGoubier 2/6/2014 15:44'!baseline01: spec	<version: '0.1-baseline'>	spec		for: #common		do: [ 			self class ensureGitFileTree.			spec blessing: #baseline.			spec package: 'Alt-Browser'.			spec group: 'default' with: #('Alt-Browser') ]! !!ConfigurationOfAltBrowser methodsFor: 'symbolic versions' stamp: 'ThierryGoubier 2/6/2014 17:14'!stable: spec	<symbolicVersion: #'stable'>	spec for: #'pharo2.x' version: '0.1'.	spec for: #'pharo3.x' version: '0.2'! !!ConfigurationOfAltBrowser methodsFor: 'symbolic versions' stamp: 'ThierryGoubier 2/6/2014 17:14'!development: spec	<symbolicVersion: #'development'>	spec for: #'pharo2.x' version: '0.3'.	spec for: #'pharo3.x' version: '0.4'! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:13'!version02: spec	<version: '0.2' imports: #('0.1-baseline')>	spec		for: #'pharo3.x'		do: [ 			spec				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo3.0&readOnly=1';				blessing: #stable;				author: 'ThierryGoubier';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 3.0 with smart suggestions, refactoring integration and git integration'.			spec package: 'Alt-Browser' with: 'Alt-Browser-ThierryGoubier.1' ]! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:13'!version03: spec	<version: '0.3' imports: #('0.1-baseline')>	spec		for: #'pharo2.x'		do: [ 			spec				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo2.0';				blessing: #development;				author: 'ThierryGoubier';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 2.0 with smart suggestions, refactoring integration and git integration'. ]! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:13'!version04: spec	<version: '0.4' imports: #('0.1-baseline')>	spec		for: #'pharo3.x'		do: [ 			spec				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo3.0';				blessing: #development;				author: 'ThierryGoubier';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 3.0 with smart suggestions, refactoring integration and git integration'. ]! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:12'!version01: spec	<version: '0.1' imports: #('0.1-baseline')>	spec		for: #'pharo2.x'		do: [ 			spec				blessing: #stable;				author: 'ThierryGoubier';				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&readOnly=1&branch=pharo2.0';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message list / finder for Pharo 2.0 with smart suggestions, refactoring integration and git integration.'.			spec package: 'Alt-Browser' with: 'Alt-Browser-ThierryGoubier.1' ]! !!ConfigurationOfAltBrowser methodsFor: 'accessing' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfAltBrowser methodsFor: 'accessing' stamp: 'ThierryGoubier 2/6/2014 15:44'!project	^ project		ifNil: [ 			| constructor |				"Bootstrap Metacello if it is not already loaded"			(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.				"Construct Metacello project"			project := MetacelloMCProject new projectAttributes: self customProjectAttributes.			constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.			project loadType: #linear.	"change to #atomic if desired"			project ]! !!ConfigurationOfAltBrowser methodsFor: 'baseline' stamp: 'ThierryGoubier 2/6/2014 15:44'!baseline01: spec	<version: '0.1-baseline'>	spec		for: #common		do: [ 			self class ensureGitFileTree.			spec blessing: #baseline.			spec package: 'Alt-Browser'.			spec group: 'default' with: #('Alt-Browser') ]! !!ConfigurationOfAltBrowser methodsFor: 'symbolic versions' stamp: 'ThierryGoubier 2/6/2014 17:14'!stable: spec	<symbolicVersion: #'stable'>	spec for: #'pharo2.x' version: '0.1'.	spec for: #'pharo3.x' version: '0.2'! !!ConfigurationOfAltBrowser methodsFor: 'symbolic versions' stamp: 'ThierryGoubier 2/6/2014 17:14'!development: spec	<symbolicVersion: #'development'>	spec for: #'pharo2.x' version: '0.3'.	spec for: #'pharo3.x' version: '0.4'! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:13'!version02: spec	<version: '0.2' imports: #('0.1-baseline')>	spec		for: #'pharo3.x'		do: [ 			spec				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo3.0&readOnly=1';				blessing: #stable;				author: 'ThierryGoubier';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 3.0 with smart suggestions, refactoring integration and git integration'.			spec package: 'Alt-Browser' with: 'Alt-Browser-ThierryGoubier.1' ]! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:13'!version03: spec	<version: '0.3' imports: #('0.1-baseline')>	spec		for: #'pharo2.x'		do: [ 			spec				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo2.0';				blessing: #development;				author: 'ThierryGoubier';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 2.0 with smart suggestions, refactoring integration and git integration'. ]! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:13'!version04: spec	<version: '0.4' imports: #('0.1-baseline')>	spec		for: #'pharo3.x'		do: [ 			spec				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo3.0';				blessing: #development;				author: 'ThierryGoubier';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 3.0 with smart suggestions, refactoring integration and git integration'. ]! !!ConfigurationOfAltBrowser methodsFor: 'versions' stamp: 'ThierryGoubier 2/6/2014 17:12'!version01: spec	<version: '0.1' imports: #('0.1-baseline')>	spec		for: #'pharo2.x'		do: [ 			spec				blessing: #stable;				author: 'ThierryGoubier';				repository: 'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&readOnly=1&branch=pharo2.0';				description:						'AltBrowser: a tree-based, simple and advanced system browser / message list / finder for Pharo 2.0 with smart suggestions, refactoring integration and git integration.'.			spec package: 'Alt-Browser' with: 'Alt-Browser-ThierryGoubier.1' ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ConfigurationOfAltBrowser class	instanceVariableNames: ''!!ConfigurationOfAltBrowser class commentStamp: '<historical>' prior: 0!!!ConfigurationOfAltBrowser class methodsFor: 'development support' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfAltBrowser class methodsFor: 'development support' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfAltBrowser class methodsFor: 'gitfiletree support' stamp: 'ThierryGoubier 2/6/2014 15:54'!ensureGitFileTree	"And all related dependencies."	Smalltalk		at: #MCFileTreeGitRepository		ifAbsent: [ 			Gofer new				url: 'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main';				configurationOf: 'GitFileTree';				loadDevelopment ]! !!ConfigurationOfAltBrowser class methodsFor: 'metacello tool support' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogKeywords	^ #(#SystemBrowser #MorphTreeMorph #MessageBrowser #ScopedBrowsing #SmartSuggestions #git #IDE)! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogDescription	^ 'AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration. With a minimalistic GUI so as to be able to put more of them on a screen, and a single GUI to have less to learn to use.It integrates: the finder, message browser and, of course, the system browser. It is intended for real world use (i.e. stable and complete enough for development tasks on both Pharo2 and Pharo3) and GUI experiments.'! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogKeyClassesAndExample	^ 'The core class is AltBrowser. On the class side, it maintain an abstract tree of the code base and track all code updates (class, package and method additions, changes and removal). On the instance side, it maintain a simple GUI view filtered by a RB environment, with updates triggered by the class side. The GUI is a tree pane and a code pane, nothing more.The abstract tree is build out of AltAbstractNode subclasses, one for each type of software system component. Theses nodes have a framework for : context-based naming, tree search, menu building (tree and text), keyboard shortcut building (tree and text), code updates, drag and drop, commands (see below), accept and double click, environment filtering, and stay similar to the MorphTreeNodeModel framework for building childrens.All menus and shortcuts are build out of AltCommand subclasses objects. The command framework in the nodes allow for easy extension by other packages, and commands at core are simply : a label, [an icon], activation conditions, [ a shortcut ] , and an execute. Interesting commands are AST-based (AltAstNodeCommand subclasses : the origin of SmartSuggestions), and the RB based commands.Small additions of interest are :a method version browser able to query a gitfiletree repository instead of the change log : AltVersionBrowser.in place text-based search in the tree : AltKeyboardSearchInTree.'! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogChangeLog	^ 'Time: 13 June 2013, 5:24:06 pmFirst AltBrowser configuration--Time: 13 June 2013, 5:24:07 pmTry again to get two versions for Pharo 2. and Pharo 3.--Regular updates for Pharo 3 support.version 0.1 : Pharo 2version 0.2 : Pharo 3'! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogContactInfo	^ 'https://github.com/ThierryGoubier'! !!ConfigurationOfAltBrowser class methodsFor: 'private' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfAltBrowser class methodsFor: 'private' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfAltBrowser class methodsFor: 'private' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfAltBrowser class methodsFor: 'loading' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!loadBleedingEdge	"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."	"self loadBleedingEdge"	<apiDocumentation>	^(self project version: #bleedingEdge) load! !!ConfigurationOfAltBrowser class methodsFor: 'loading' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfAltBrowser class methodsFor: 'loading' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!loadDevelopment	"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."	"self loadDevelopment"	<apiDocumentation>	^(self project version: #development) load! !!ConfigurationOfAltBrowser class methodsFor: 'accessing' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!project	^self new project! !!ConfigurationOfAltBrowser class methodsFor: 'development support' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfAltBrowser class methodsFor: 'development support' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfAltBrowser class methodsFor: 'gitfiletree support' stamp: 'ThierryGoubier 2/6/2014 15:54'!ensureGitFileTree	"And all related dependencies."	Smalltalk		at: #MCFileTreeGitRepository		ifAbsent: [ 			Gofer new				url: 'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main';				configurationOf: 'GitFileTree';				loadDevelopment ]! !!ConfigurationOfAltBrowser class methodsFor: 'metacello tool support' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogKeywords	^ #(#SystemBrowser #MorphTreeMorph #MessageBrowser #ScopedBrowsing #SmartSuggestions #git #IDE)! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogDescription	^ 'AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration. With a minimalistic GUI so as to be able to put more of them on a screen, and a single GUI to have less to learn to use.It integrates: the finder, message browser and, of course, the system browser. It is intended for real world use (i.e. stable and complete enough for development tasks on both Pharo2 and Pharo3) and GUI experiments.'! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogKeyClassesAndExample	^ 'The core class is AltBrowser. On the class side, it maintain an abstract tree of the code base and track all code updates (class, package and method additions, changes and removal). On the instance side, it maintain a simple GUI view filtered by a RB environment, with updates triggered by the class side. The GUI is a tree pane and a code pane, nothing more.The abstract tree is build out of AltAbstractNode subclasses, one for each type of software system component. Theses nodes have a framework for : context-based naming, tree search, menu building (tree and text), keyboard shortcut building (tree and text), code updates, drag and drop, commands (see below), accept and double click, environment filtering, and stay similar to the MorphTreeNodeModel framework for building childrens.All menus and shortcuts are build out of AltCommand subclasses objects. The command framework in the nodes allow for easy extension by other packages, and commands at core are simply : a label, [an icon], activation conditions, [ a shortcut ] , and an execute. Interesting commands are AST-based (AltAstNodeCommand subclasses : the origin of SmartSuggestions), and the RB based commands.Small additions of interest are :a method version browser able to query a gitfiletree repository instead of the change log : AltVersionBrowser.in place text-based search in the tree : AltKeyboardSearchInTree.'! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogChangeLog	^ 'Time: 13 June 2013, 5:24:06 pmFirst AltBrowser configuration--Time: 13 June 2013, 5:24:07 pmTry again to get two versions for Pharo 2. and Pharo 3.--Regular updates for Pharo 3 support.version 0.1 : Pharo 2version 0.2 : Pharo 3'! !!ConfigurationOfAltBrowser class methodsFor: 'catalog' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!catalogContactInfo	^ 'https://github.com/ThierryGoubier'! !!ConfigurationOfAltBrowser class methodsFor: 'private' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfAltBrowser class methodsFor: 'private' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfAltBrowser class methodsFor: 'private' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfAltBrowser class methodsFor: 'loading' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!loadBleedingEdge	"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."	"self loadBleedingEdge"	<apiDocumentation>	^(self project version: #bleedingEdge) load! !!ConfigurationOfAltBrowser class methodsFor: 'loading' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfAltBrowser class methodsFor: 'loading' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!loadDevelopment	"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."	"self loadDevelopment"	<apiDocumentation>	^(self project version: #development) load! !!ConfigurationOfAltBrowser class methodsFor: 'accessing' stamp: 'ThierryGoubier 1/30/2014 10:32:39'!project	^self new project! !